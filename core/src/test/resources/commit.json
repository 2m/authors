{
  "sha": "ae0bd1c05b593397217370046b56756e9afd63c9",
  "commit": {
    "author": {
      "name": "Martynas Mickevičius",
      "email": "mmartynas@gmail.com",
      "date": "2016-11-11T07:39:54Z"
    },
    "committer": {
      "name": "Martynas Mickevičius",
      "email": "mmartynas@gmail.com",
      "date": "2016-11-11T07:44:02Z"
    },
    "message": "Publish unidoc",
    "tree": {
      "sha": "ca9277c7b19fc3a2fd02b4257750e960a1a74abf",
      "url": "https://api.github.com/repos/akka/alpakka/git/trees/ca9277c7b19fc3a2fd02b4257750e960a1a74abf"
    },
    "url": "https://api.github.com/repos/akka/alpakka/git/commits/ae0bd1c05b593397217370046b56756e9afd63c9",
    "comment_count": 0
  },
  "url": "https://api.github.com/repos/akka/alpakka/commits/ae0bd1c05b593397217370046b56756e9afd63c9",
  "html_url": "https://github.com/akka/alpakka/commit/ae0bd1c05b593397217370046b56756e9afd63c9",
  "comments_url": "https://api.github.com/repos/akka/alpakka/commits/ae0bd1c05b593397217370046b56756e9afd63c9/comments",
  "author": {
    "login": "2m",
    "id": 422086,
    "avatar_url": "https://avatars0.githubusercontent.com/u/422086?v=3",
    "gravatar_id": "",
    "url": "https://api.github.com/users/2m",
    "html_url": "https://github.com/2m",
    "followers_url": "https://api.github.com/users/2m/followers",
    "following_url": "https://api.github.com/users/2m/following{/other_user}",
    "gists_url": "https://api.github.com/users/2m/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/2m/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/2m/subscriptions",
    "organizations_url": "https://api.github.com/users/2m/orgs",
    "repos_url": "https://api.github.com/users/2m/repos",
    "events_url": "https://api.github.com/users/2m/events{/privacy}",
    "received_events_url": "https://api.github.com/users/2m/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "2m",
    "id": 422086,
    "avatar_url": "https://avatars0.githubusercontent.com/u/422086?v=3",
    "gravatar_id": "",
    "url": "https://api.github.com/users/2m",
    "html_url": "https://github.com/2m",
    "followers_url": "https://api.github.com/users/2m/followers",
    "following_url": "https://api.github.com/users/2m/following{/other_user}",
    "gists_url": "https://api.github.com/users/2m/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/2m/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/2m/subscriptions",
    "organizations_url": "https://api.github.com/users/2m/orgs",
    "repos_url": "https://api.github.com/users/2m/repos",
    "events_url": "https://api.github.com/users/2m/events{/privacy}",
    "received_events_url": "https://api.github.com/users/2m/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6525eb15979d5dc12033932c92ba8ac964219472",
      "url": "https://api.github.com/repos/akka/alpakka/commits/6525eb15979d5dc12033932c92ba8ac964219472",
      "html_url": "https://github.com/akka/alpakka/commit/6525eb15979d5dc12033932c92ba8ac964219472"
    }
  ],
  "stats": {
    "total": 44,
    "additions": 17,
    "deletions": 27
  },
  "files": [
    {
      "sha": "fe319461adadb5bb2d849c2fcae2c916cdd5192c",
      "filename": "CONTRIBUTING.md",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/akka/alpakka/blob/ae0bd1c05b593397217370046b56756e9afd63c9/CONTRIBUTING.md",
      "raw_url": "https://github.com/akka/alpakka/raw/ae0bd1c05b593397217370046b56756e9afd63c9/CONTRIBUTING.md",
      "contents_url": "https://api.github.com/repos/akka/alpakka/contents/CONTRIBUTING.md?ref=ae0bd1c05b593397217370046b56756e9afd63c9",
      "patch": "@@ -86,4 +86,4 @@ Example:\n \n 1. Create a [new release](https://github.com/akka/alpakka/releases/new) with the next tag version (e.g. `v0.3`), title and release decsription including notable changes mentioning external contributors.\n 2. Travis CI will start a [CI build](https://travis-ci.org/akka/alpakka/builds) for the new tag and publish artifacts to Bintray and will sync them to Maven Central.\n-3. Checkout the newly created tag and run `sbt \"deployRsync repo.akka.io\"` to deploy API and reference documentation.\n+3. Update the configuration of [Lightbend Tech Hub](https://github.com/typesafehub/tech-hub/blob/master/docsites.sbt#L70) to include the latest version."
    },
    {
      "sha": "12e09af6d0db5a3300b966017041efe7031ce39d",
      "filename": "build.sbt",
      "status": "modified",
      "additions": 4,
      "deletions": 10,
      "changes": 14,
      "blob_url": "https://github.com/akka/alpakka/blob/ae0bd1c05b593397217370046b56756e9afd63c9/build.sbt",
      "raw_url": "https://github.com/akka/alpakka/raw/ae0bd1c05b593397217370046b56756e9afd63c9/build.sbt",
      "contents_url": "https://api.github.com/repos/akka/alpakka/contents/build.sbt?ref=ae0bd1c05b593397217370046b56756e9afd63c9",
      "patch": "@@ -1,12 +1,7 @@\n lazy val alpakka = project\n   .in(file(\".\"))\n-  .enablePlugins(NoPublish, DeployRsync)\n-  .disablePlugins(BintrayPlugin)\n+  .enablePlugins(PublishUnidoc)\n   .aggregate(amqp, cassandra, docs, files, mqtt)\n-  .settings(\n-    unidocSettings,\n-    deployRsyncArtifact := (sbtunidoc.Plugin.UnidocKeys.unidoc in Compile).value.head -> s\"www/api/alpakka/${version.value}\"\n-  )\n \n lazy val amqp = project\n   .in(file(\"amqp\"))\n@@ -34,7 +29,7 @@ lazy val files = project\n \n lazy val mqtt = project\n   .in(file(\"mqtt\"))\n-  .enablePlugins()\n+  .enablePlugins(AutomateHeaderPlugin)\n   .settings(\n     name := \"akka-stream-alpakka-mqtt\",\n     Dependencies.Mqtt,\n@@ -46,7 +41,7 @@ lazy val mqtt = project\n \n lazy val docs = project\n   .in(file(\"docs\"))\n-  .enablePlugins(ParadoxPlugin, NoPublish, DeployRsync)\n+  .enablePlugins(ParadoxPlugin, NoPublish)\n   .disablePlugins(BintrayPlugin)\n   .settings(\n     name := \"Alpakka\",\n@@ -59,6 +54,5 @@ lazy val docs = project\n       \"extref.paho-api.base_url\" -> \"https://www.eclipse.org/paho/files/javadoc/index.html?%s.html\",\n       \"scaladoc.akka.base_url\" -> s\"http://doc.akka.io/api/akka/${Dependencies.AkkaVersion}\",\n       \"scaladoc.akka.stream.alpakka.base_url\" -> s\"http://doc.akka.io/api/alpakka/${version.value}\"\n-    ),\n-    deployRsyncArtifact := (paradox in Compile).value -> s\"www/docs/alpakka/${version.value}\"\n+    )\n   )"
    },
    {
      "sha": "218df45fc2e9d307d94826707fce8ae5647a8419",
      "filename": "project/Publish.scala",
      "status": "modified",
      "additions": 12,
      "deletions": 16,
      "changes": 28,
      "blob_url": "https://github.com/akka/alpakka/blob/ae0bd1c05b593397217370046b56756e9afd63c9/project/Publish.scala",
      "raw_url": "https://github.com/akka/alpakka/raw/ae0bd1c05b593397217370046b56756e9afd63c9/project/Publish.scala",
      "contents_url": "https://api.github.com/repos/akka/alpakka/contents/project/Publish.scala?ref=ae0bd1c05b593397217370046b56756e9afd63c9",
      "patch": "@@ -1,7 +1,7 @@\n import sbt._, Keys._\n \n /**\n- * For projects that are not published.\n+ * For projects that are not to be published.\n  */\n object NoPublish extends AutoPlugin {\n   override def requires = plugins.JvmPlugin\n@@ -26,25 +26,21 @@ object Publish extends AutoPlugin {\n   )\n }\n \n-object DeployRsync extends AutoPlugin {\n-  import scala.sys.process._\n-  import sbt.complete.DefaultParsers._\n+object PublishUnidoc extends AutoPlugin {\n+  import sbtunidoc.Plugin._\n+  import sbtunidoc.Plugin.UnidocKeys._\n \n   override def requires = plugins.JvmPlugin\n \n-  trait Keys {\n-    val deployRsyncArtifact = taskKey[(File, String)](\"File or directory and a path to deploy to\")\n-    val deployRsync = inputKey[Int](\"Deploy using SCP\")\n+  def publishOnly(artifactType: String)(config: PublishConfiguration) = {\n+    val newArts = config.artifacts.filterKeys(_.`type` == artifactType)\n+    new PublishConfiguration(config.ivyFile, config.resolverName, newArts, config.checksums, config.logging)\n   }\n \n-  object autoImport extends Keys\n-  import autoImport._\n-\n-  override def projectSettings = Seq(\n-    deployRsync := {\n-      val (_, host) = (Space ~ StringBasic).parsed\n-      val (from, to) = deployRsyncArtifact.value\n-      s\"rsync -rvz $from/ $host:$to\"!\n-    }\n+  override def projectSettings = unidocSettings ++ Seq(\n+    doc in Compile := (doc in ScalaUnidoc).value,\n+    target in unidoc in ScalaUnidoc := crossTarget.value / \"api\",\n+    publishConfiguration ~= publishOnly(Artifact.DocType),\n+    publishLocalConfiguration ~= publishOnly(Artifact.DocType)\n   )\n }"
    }
  ]
}
